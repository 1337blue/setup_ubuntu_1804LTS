- name: Setup working environment
  hosts: localhost
  vars:
    terraform_version: 0.10.8
    slack_version: 4.0.0
    git_email: youremail@here 
    git_username: yourusername
    non_sudo_user: ubuntu
    tmp_dir: /tmp/ansible
    repos:
      enpass: deb https://apt.enpass.io/ stable main
      opera-stable: deb [arch=i386,amd64] https://deb.opera.com/opera-stable/ stable non-free
      vscode: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main

  tasks:
    - name: Create tmp dir
      file:
        path: "{{ tmp_dir }}"
        state: directory
        mode: '755'

    - name: Check git config
      git_config:
        list_all: yes
      register: output
      become: yes
      become_user: "{{ non_sudo_user }}"

    - name: Add git email
      git_config:
        name: user.email
        scope: local
        value: "{{ git_email }}"
      when:
        - '"user.email" not in output.config_values'
    
    - name: Add git user name
      git_config:
        name: user.name
        scope: local
        value: "{{ git_username }}"
      when:
        - '"user.name" not in output.config_values'

    - name: Upgrade Packages
      apt:
       update_cache: yes
       upgrade: full

    - name: Install Packages
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - awscli
        - docker-compose
        - docker.io
        - jq
        - software-properties-common 
        - apt-transport-https
        - wget
        - net-tools
        - vim
        - xvnc4viewer
        - htop
        - tree
        - iotop
        - virtualbox
        - linux-headers-generic

    # vagrant depends on virtualbox
    - name: Install Vagrant
      apt:
        name: vagrant

    - name: Import GPG keys
      apt_key:
        url: "{{ item }}"
      with_items:   
        - https://packages.microsoft.com/keys/microsoft.asc
        - https://deb.opera.com/archive.key
        - https://apt.enpass.io/keys/enpass-linux.key
 
    - name: Add apt repos 
      apt_repository:
        repo: "{{ item.value }}"
        filename: "{{ item.key }}"
      loop: "{{ lookup ('dict', repos) }}"
            
    - name: Install non standard packages
      apt:
        name: "{{ item.key }}"
      when: not item.key == "vscode"
      loop: "{{ lookup ('dict', repos) }}"

    - name: Install the special kid
      apt:
        name: code

    - name: Install Slack
      snap:
        name: slack
        classic: yes

    - name: Is latest terraform installed?
      shell: terraform -v
      register: is_terraform_installed
      ignore_errors: yes

    - name: Download terraform binary
      get_url:
        url: https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip
        dest: "{{ tmp_dir }}"
      when: (not is_terraform_installed.rc == 0 or not terraform_version in is_terraform_installed.stdout_lines[0])

    - name: Install terraform
      unarchive:
        src: "{{ tmp_dir }}/terraform_{{ terraform_version }}_linux_amd64.zip"
        dest: /usr/bin
        mode: '755'
      when: (not is_terraform_installed.rc == 0 or not terraform_version in is_terraform_installed.stdout_lines[0])
    
    - name: fetch VS Code extensions
      become: yes
      become_user: "{{ non_sudo_user }}"
      shell: code --list-extensions
      register: vs_code_extensions

    - name: Install VS Code extensions
      become: yes
      become_user: "{{ non_sudo_user }}"
      shell: code --install-extension "{{ item }}"
      when: item not in vs_code_extensions.stdout
      with_items:
      - DavidAnson.vscode-markdownlint
      - dbaeumer.vscode-eslint
      - eamodio.gitlens 
      - HookyQR.beautify
      - janjoerke.jenkins-pipeline-linter-connector
      - jmMeessen.jenkins-declarative-support
      - magicstack.MagicPython
      - mauve.terraform
      - mhutchie.git-graph
      - ms-python.python
      - ms-azuretools.vscode-docker
      - redhat.vscode-yaml
      - teledemic.branch-warnings
      - tht13.python
      - vscodevim.vim

    - name: Increase watch limit for VSCode
      lineinfile:
        path: /etc/sysctl.conf
        state: present
        line: fs.inotify.max_user_watches=524288
    
    - name: Cleanup apt
      apt:
        autoremove: yes
        autoclean: yes

    - name: Cleanup tmp dir
      file:
        path: "{{ tmp_dir }}"
        state: absent

